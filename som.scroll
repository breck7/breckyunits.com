date 2025-5-25
tags All Thinking Ford
title The Spherical Object Model
container 500px
standardPost.scroll

som.gif
 caption A language where all concepts are defined out of spheres with radii that accurately contain instances of the concept. In the simple prototype above, spheres are hyperlinked and clicking on one loads and zooms in on its contents.

endSnippet

Imagine a language where the only primitive is the *sphere*. Everything is composed of spheres. Spheres contain spheres and can be recursive. It's spheres all the way down.

***

? Is this even possible?

So far it seems to me it might be, if you get the "Grammar of Spheres" correct.

All spheres have a diameter. If you use Planck Lengths, base 2, you can use ~206 bits for the size property to cover every sphere up to the sphere of the observable universe.

Recursion is essential. A line sphere is a sphere containing two unit spheres, with a recursive line sphere in between.

Spin might be key (though it may be better to represent spin via an internal "spin state" sphere). A NAND gate could be 2 input spheres with a spin which touch an output sphere that only changes spin if both input spheres are going in the right direction. Numeral base systems could be represented with spin or internal state spheres.

Spheres would abut input and output spheres. A human sphere would have input sphere for oxygen, food, water, etc, and output spheres for carbon dioxide, waste, and so on.

Time spheres would contain spheres of a concept at different times. Ie., humans would have an embryo, infant, toddler, and adult sphere, among others.

Even ideas would be represented as spheres. Ideas would be spheres inside neuron spheres, perhaps.

I haven't yet been able to use only spheres to model electromagnetic fields accurately, but it feels doable.

***

? What would the source code for a Spherical Object Model look like?

It would be very similar to the DOM, with spheres instead of rectangular divs as the primitive.

The code for the water molecule above looks like:
code
 waterMoleculeSphere
  oxygenSphere
   radius 1.5
   x 0
   y 0
   z 0
  leftHydrogenSphere
   radius 1
   x 1.5
   y 1.5
   z 0
  rightHydrogenSphere
   radius 1
   x -1.5
   y 1.5
   z 0

Nailing the semantic details would be essential, but I think the standard language wouldn't look more complex than that.

***

? What about the dozens of existing 3D languages^langs?

Existing 3D languages are generally domain specific (like in chemistry) or focused on representing the visuals of scenes, for film or video games, and not on the causal relationships between objects that this would be. The Spherical Object Model would be a domain-agnostic, general purpose language containing the spherical primitives that can model all the causal patterns in our universe.

***

? Why only one primitive?

In my mind's eye I can instantly, and in parallel, draw spheres around the boundaries of all objects I see. It seems I can visualize hundreds, if not thousands or more, spheres at once. This parallelization capability goes away if I were to add even one more shape, such as the cube. I then need to consciously decide whether each object should be surrounded by a sphere or a cube, and it becomes more of a sequential process. It seems a single primitive allows for a massive parallelization speedup.

? Of the various primitives, why the sphere, as opposed to the cube?

I think the sphere is the obvious choice, since it is easy to construct other primitives out of them, and in my experience spheres are far more common in nature than other 3D shapes.

? Why not point clouds?

As far as I can figure, everything in this world needs to take up space. Spheres are points that take up space. As the bit is the primitive in one dimension, the sphere seems to be the primitive in 3 dimensions.

***

? Why would we want this?

A universal spherical language would be _grounded to reality_ in a way that no other language is. We could sort all concepts across all domains by their size and/or frequency in the real world.

It might take longer, at first, to build up a shared 4D encyclopedia, but the _physical constraints from the 4D laws of nature_ would force it to contain a truth that can't be matched by lower dimensional languages. Just as a Mercator projection contains unavoidable bias, so does a flat encyclopedia relative to a spherical one.

It is extremely easy to build false models out of words, so switching to a well-designed sphere based language might be a radically better way to create and communicate true models.

****

# Reader Comments

What do you think? Send feedback you'd like me to post to breck7@gmail.com, or add your comment by editing the source to this post.
 https://breckyunits.com/edit.html?fileName=som.scroll editing the source

- A reader points out the relevance of Leibniz' La Monadologie (1714). I had overlooked that work by Leibniz before. I now have read this translation. Extremely interesting.
 https://www.reddit.com/r/semanticweb/comments/1kw33by/comment/muh7lb1/ points out
 https://en.wikipedia.org/wiki/Monadology La Monadologie
 https://www.plato-philosophy.org/wp-content/uploads/2016/07/The-Monadology-1714-by-Gottfried-Wilhelm-LEIBNIZ-1646-1716.pdf translation
 // Monads are where perception happens.
 // Each monad has a little bit of perception.
 // These monads do not go away. Death is like spinning around really fast, and all your perceptions become disconnected
 // "And as the same town, looked at from various sides, appears quite different and becomes as it were numerous in aspects [perspectivement]; even so, as a result of the infinite number of simple substances, it is as if there were so many different universes, which, nevertheless are nothing but aspects [perspectives] of a single universe, according to the special point of view of each Monad."
- gwern points out the relevance of "epicycles/Fourier decomposition, Gaussian splatting". Playing with Gaussian splats in part encouraged me to try using spheres as the primitive. I particularly enjoyed this overview.
 https://www.reddit.com/r/LessWrong/comments/1kvu02g/comment/mufaxe5/ gwern
 https://nianticlabs.com/news/splats-change-everything overview
- A reader suggests the reason for spheres is they are "the most efficient container". Their perspective is its not spheres all the way down, it's pattern recursion, and spheres are just "the most elegant expression of those patterns". I'm not sure about the deeper idea, but I love the line about container efficiency. That is a good exercise to do: given a bunch of naturally observed patterns, see which primitive shape has the best efficiency as a container.
 https://www.reddit.com/r/complexsystems/comments/1kvtkpp/comment/muhp6hk/ suggests
- First draft posted 5/25/2025
^langs The list of 3D languages I've studied to date.
 https://pldb.io/lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22contains%22%2C%22data%22%3A%22tags%22%2C%22origData%22%3A%22tags%22%2C%22type%22%3A%22string%22%2C%22value%22%3A%5B%223d%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D The list of 3D languages
