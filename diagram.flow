>h2 The problem
 left 14
 top 8
 width 26
 height 6
 style text-align: center;
>h2 The Solution: Tree Languages
 left 14
 top 22
 width 26
 height 5
 style text-align: center;
>h3 Transform to Trees
 left 27
 top 11
 width 13
 height 10
>h3 Are Already Trees
 left 27
 top 25
 width 13
 height 10
>h3 Produce Same Result
 left 41
 top 18
 width 9
 height 11
>p &gt;
 left 25
 top 15
 width 3
 height 3
>p &gt;
 left 39
 top 22
 width 3
 height 3
>p &gt;
 left 25
 top 29
 width 3
 height 3
>p
 left 15
 top 28
 width 11
 height 8
 slang
  getLocation
   1145 duke
   98103 ibiza
  print getLocation 1145
 style font-family: monospace; font-size: 15px;
>p
 left 15
 top 12
 width 10
 height 14
 slang
  getLocation (key: int) {
   if (key === 1145)
   return "duke"
   if (key === 98103)
   return "ibiza"
  }
  print(getLocation(1145));
>pre
 left 28
 top 28
 width 3
 height 9
 slang
  ├o
  │├oº
  │└oº
  └oºº
>p
 left 31
 top 27
 width 9
 height 12
 style font-size: 12px;
 slang
  mapToXY(SourceCode)
  =
  mapToXY(TreeForm)
  
  
  so SourceCode = Tree
  
  Also, a ~10x size reduction
>p
 left 31
 top 13
 width 8
 height 9
 style font-size: 12px;
 slang
  mapToXY(SourceCode)
  !=
  mapToXY(TreeForm)
  
  
  so SourceCode != Tree
  
>pre
 left 28
 top 14
 width 3
 height 9
 style font-size: 3px;
 slang
  ├oº
  │├oº
  ││├oº
  ││├oº
  ││├oº
  ││└oº
  │└oº
  │ ├oº
  │ │├oº
  │ ││├oº
  │ ││├oº
  │ ││├oº
  │ ││└oº
  │ │└oº
  │ │ └oº
  │ │  ├oº
  │ │  └oº
  │ └oº
  │  ├oº
  │  │├oº
  │  │├oº
  │  │├oº
  │  │└oº
  │  ├oº
  │  │└oº
  │  │ ├oº
  │  │ └oº
  │  └oº
  └oº
   ├oº
   │└oº
   │ ├oº
   │ ├oº
   │ └oº
   ├oº
   └oº
>h3 1D Programs
 left 14
 top 11
 width 12
 height 11
>h3 Tree Programs
 left 14
 top 25
 width 12
 height 10
>p
 left 41
 top 21
 width 8
 height 9
 slang
  ./program.source
  "duke"
>p
 left 13
 top 27
 width 5
 height 15
 slang
  0,0 --&gt; x
      |
     V
    -y
 style color: red;
@wall
 layout custom