Minor Epiphanies
================

March 16, 2013

A kid says _Mommy_ or _Daddy_ or _Jack_ or _Jill_ hundreds of times before grasping the concept of a _name_.

Likewise, a programmer types `name = Breck` or `age=15` hundreds of times before grasping the concept of a _variable_.

What do you call it when someone finally sees the _concept_?

John Calcote, a programmer with decades of experience, calls it a *minor epiphany*.

Minor epiphanies. Anyone who's programmed for a while can appreciate that term.

When you start programming you do pure trial and error. _What will happen when I type this or click that?_ You rely on memorization of action and reaction. Nothing makes sense. Every single term--variable, object, register, boolean, int, string, array, and so on--is completely and utterly foreign.

But you start to encounter these moments. These minor epiphanies, where suddenly you see the connection between a class of things. Suddenly something makes sense. Suddenly one term is not so foreign anymore. You have a new tool at your disposable. You have removed another obstacle that used to trip you.

In programming the well of minor epiphanies never runs dry. Even after you've learned thousands of things the epiphanies keep flowing at the same rate. Maybe the epiphanies are no longer about _what_ the concept is, or _how_ you can use it, but now are more about _where_ did this concept come from, _when_ was it created, _who_ created it, and most fascinating of all, _why did they create it_?

Minor epiphanies give you a rush, save you time, help you make better products, and help you earn more.

As someone who loves to learn, my favorite thing about them is the rush you get from having something suddenly click. They make this programming thing really, really fun. Day in and day out.

‚ÅÇ

Notes
=====
- I stumbled upon the term in John Calcote's book "Autotools".

Built with Scroll v177.0.0
