importOnly

footnoteNode
 extends caveatNode
 crux footnote

readingListItemNode
 cells urlCell
 catchAllCell stringCell
 javascript
  compile() {
    const url = this.getWord(0)
    const [title, author] = this.getContent().split(" by ")
    return `<li><a href="${url}">${title ?? url}</a>${author ? ` by ${author}` : ""}</li>`
  }

readingListNode
 extends abstractScrollNode
 cells keywordCell
 cruxFromId
 catchAllNodeType readingListItemNode
 example
  readingList
   https://example.com/similar by Author Name
 javascript
  compile() {
    return `<br><ul>${this.map(child => child.compile()).join("\n")}</ul>`
  }

thoughtNode
 extends aftertextNode
 crux *
 javascript
  compile() {
    // Hacky, I know. I will fix and upstream to scroll.
    this.prependLine(this.getContent())
    this.appendLine('wrapsOn')
    return super.compile()
  }