figure {
  margin: 0;
  padding: 0;
}
.dropcap:first-letter {
  font-size: 3rem;
  line-height: .9em;
  margin-right: .125rem;
  display: block;
  float: left;
}
.dinkus {
  text-align: center;
  padding: 1rem;
}
.dinkus span {
  vertical-align: sub;
}
details {
  margin-top: 10px;
}
summary {
  font-family: "SF Pro", "Helvetica Neue", "Segoe UI", "Arial";
  cursor: pointer;
}
.scrollCaptionedFigure {
  display: block;
  break-inside: avoid;
  text-align: center;
}
.scrollCaptionedFigure img {
  max-width: 100%;
  height: auto;
  margin-top: .1875rem;
}
.scrollCaptionedFigure figcaption {
  font-family: "SF Pro", "Helvetica Neue", "Segoe UI", "Arial";
  font-size: .8rem;
}
.scrollCaptionedFigure figcaption .scrollParagraph {
  margin-top: 0;
}
.scrollCodeBlock {
  overflow: auto;
  font-size: .8rem;
  hyphens: none;
  white-space: pre;
  break-inside: avoid;
  display: block;
  margin: .5rem 0;
  padding: .5rem;
  border-radius: 0;
  position: relative;
}
.scrollCodeBlock:hover .scrollCopyButton {
  opacity: .5;
}
.scrollCodeBlock:hover .scrollCopyButton:hover {
  opacity: .8;
}
.scrollCodeBlock:hover .scrollCopyButton:active {
  opacity: 1;
}
.scrollCopyButton {
  position: absolute;
  top: .125rem;
  right: .125rem;
  font-size: .875rem;
  cursor: pointer;
  opacity: 0;
}
.scrollCopyButton::after {
  content: "[ ]";
}
.scrollCopiedButton::after {
  content: "[✓]";
}
html,body,div,span,p,ol,ul,li,table,figure {
  margin: 0;
  padding: 0;
  border: 0;
  vertical-align: baseline;
  border-spacing: 0;
}
ol,ul {
  padding-left: 1rem;
}
li {
  margin-top: .4rem;
  line-height: 1.4;
}
a {
  text-decoration-color: transparent;
}
a:hover {
  text-decoration-color: initial;
}
sup,sub {
  vertical-align: baseline;
  position: relative;
  top: -.375rem;
}
sub {
  top: .375rem;
}
html {
  padding: .25rem;
  background-color: rgb(244,244,244);
  font-family: Exchange,Georgia,serif;
  color: #000;
  font-size: var(--base-font-size, 16px);
  hyphens: auto;
}
p {
  margin-top: .4rem;
  line-height: 1.4rem;
}
.scrollQuote {
  break-inside: avoid;
  display: block;
  margin: .5rem 0;
  padding: .5rem;
  background: rgba(204,204,204,.5);
  white-space: pre-line;
  border-left: .5rem solid rgba(204,204,204,.8);
}
code {
  font-size: .9rem;
  background-color: rgba(204,204,204,.5);
  padding: .125rem .25rem;
  border-radius: .25rem;
}
.scrollParagraph {
  text-align: justify;
}
.scrollColumns {
  column-count: auto;
  column-fill: balance;
  column-width: 35ch;
  column-gap: 1.5rem;
  padding-left: 1.25rem;
  padding-right: 1.25rem;
  margin: auto;
}
.scrollSnippetContainer {
  padding: 1ch 0;
  break-inside: avoid;
  text-align: justify;
}
h1,h2,h3,h4 {
  margin: .625rem 0;
}
h1 {
  font-size: 1.25rem;
}
h2 {
  font-size: 1.125rem;
}
h3,h4 {
  font-size: 1rem;
}
h1.scrollTitle {
  text-align: center;
  margin: auto;
  margin-bottom: .15625rem;
  margin-top: 0;
  font-size: 1.75rem;
  max-width: calc(100vw - 2 * (1.5625rem + 1.875rem));
}
h1.scrollTitle a {
  color: #000;
}
.scrollDateline {
  font-style: italic;
  line-height: 1.4rem;
  font-size: .75rem;
}
.scrollSection {
  break-inside: avoid;
}
.scrollSection h1,.scrollSection h2,.scrollSection h3,.scrollSection h4 {
  text-align: center;
}
h4.scrollQuestion {
  text-align: left;
  margin: 1.4rem 0 0 0;
}
.scrollSection:first-child h1,.scrollSection:first-child h2,.scrollSection:first-child h3,.scrollSection:first-child h4 {
  margin-top: 0;
}
.scrollSection:first-child h4.scrollQuestion {
  margin-top: 0;
}
.scrollNoteLink {
  opacity: .4;
  text-decoration: none;
}
.scrollNoteLink:hover {
  opacity: 1;
}
.scrollFootNoteUsageLink {
  opacity: .7;
  text-decoration: none;
}
.scrollFootNoteUsageLink:hover {
  opacity: 1;
}
.scrollHoverNote {
  text-decoration: underline dashed 1px rgba(0,0,0,.1);
  cursor: default;
}
.scrollCodeBlock {
  border-left: .5rem solid rgba(204,204,204,.8);
}
.scrollTable {
  table-layout: fixed;
  font-family: "SF Pro", "Helvetica Neue", "Segoe UI", "Arial";
  margin: .5rem 0;
  overflow: hidden;
  font-size: .8rem;
  width: 100%;
  hyphens: none;
  border: 1px solid rgba(224,224,224,.8);
}
.scrollTable td,.scrollTable th {
  padding: .1875rem;
  overflow: hidden;
  white-space: nowrap;
}
.scrollTable td:hover {
  text-overflow: unset;
  overflow: unset;
  white-space: unset;
}
.scrollTable th {
  text-transform: capitalize;
}
.scrollTable th {
  border-bottom: 2px solid rgba(0,0,0,.6);
  text-align: left;
}
.scrollTable tr:nth-child(even) {
  background: rgba(224,224,224,.6);
}
.scrollByLine {
  font-size: .875rem;
  font-style: italic;
  margin: .25rem 0;
  text-align: center;
}
.scrollViewSource {
  text-align: center;
  font-family: Verdana;
  font-weight: 100;
}
.scrollViewSource a {
  color: rgba(204,204,204,.5);
}
.scrollViewSource a:hover {
  color: #333;
}
.scrollContinueReadingLink {
  display: block;
  text-align: center;
}
.scrollDashboard {
  width: 100%;
  font-size: 1.875rem;
  text-align: center;
  font-weight: bold;
  break-inside: avoid;
  margin-top: .5rem;
  margin-bottom: .5rem;
}
.scrollDashboard td {
  width: 33.3%;
  border: 1px solid #e8e8e8;
}
.scrollDashboard span {
  font-size: 1.25rem;
  display: block;
}
.scrollChat span {
  font-family: Verdana;
  margin-top: .3125rem;
  padding: .3125rem 1.25rem;
  border-radius: .9375rem;
  display: inline-block;
}
.scrollChatLeft span {
  background: rgba(204,204,204, .5);
}
.scrollChatRight span {
  color: white;
  background: rgb(0,132,255);
}
.scrollYouTubeHolder {
  position: relative;
  width: 100%;
  height: 0;
  padding-bottom: 56.25%;
}
.scrollYouTubeEmbed {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

A Proposal to Solve Government Forms Worldwide, Forever
=======================================================

June 16, 2023

Here is an idea for a simple infrastructure to power all government forms, all over the world. This system would work now, would have worked thousands of years ago, and could work thousands of years in the future.

Benefits
========
In theory all government forms could shift to this model, and once a citizen learns this simple system, they would be able to understand how to work with government forms anywhere in the world.

This system could reduce the amount of time citizens waste on forms, reduce asymmetries between those who can afford form experts (accountants, lawyers, et cetera), and those who cannot, and increase transparency and reduce expense of governments.

Obstacles
=========
I will not make any claims that this system will catch on. Let's be generous and assume my system works as I claim. Even then, and even if 99% of citizens were better off, if the 1% of the population with power does not find this system in their interests, it is very plausible that it will not happen. In other words, it is a plausible argument that the current byzantine system strongly benefits those in the top 1% of society who derive revenue from this system, and can simply use a fraction of their dividend streams to have experts deal with these problems. So even if the system is significantly better for 99% of people, it could be worse for 1% of people, and it could be those people who decide what system to use, meaning this system might never take off.

Alternatively, if this system were to catch on, an unanticipated second order effect could be that by making government forms so easy and simple, more forms are created, reducing the net benefit of this system.

Obstacles aside, let me describe it anyway.

The System
==========

Government Forms
================
There are 3 key concepts to this system: Specifications, Instances, and Templates.

*Specifications* describe the fields of a form. For example, that it requires a name and a date and a signature. Every government form must have a Specification $S$ and every Specification must have an identifier. Specifications are written in a Specification Language $L$. The Specification Language has a syntax $X$.

*Instances* are documents citizens submit that include the Specification identifier and contain a document written to that specification. Instances, $I$, are written in the same syntax $X$ as Specifications $S$.

*Templates* can be any kind of document $T$ from which an instance $I$ of $S$ can be derived. Templates can follow any syntax.

Here's the Key Idea
===================
In this system, governments can provide Templates $T$ and citizens can submit them, as they do today, *_or_* they can directly submit an Instance $I$ for any and every Specification $S$. In other words, Governments can still have fancy Templates for Birth Certificates or Titles or Taxes, but they *also* have to accept Instances $I$ for that Specification. Government archives would treat the instances $I$ as the source of truth, and the Templates $T$ would only serve as an optional artifact backing the $I$.

The Syntax
==========
The syntax I have developed that is one candidate for $X$ for making this system work I call Tree Notation. There are no visible syntax characters in Tree Notation. It is merely the recognition that the grid of a spreadsheet and the concept of indentation is all the syntax needed to produce any Specification and any Instance ever needed. My syntax was inspired by languages like XML, JSON, and S-Expressions, but has the property that it is the most minimal—there is nothing left to take out, while still allowing the representation of any idea. I believe this mathematical minimalism makes it timeless and a good base for building a universal government form system.

An Example
==========
A simple example is shown below. Despite the simplicity of the example, rest assured this system scales to handle even the most complex government forms and workflows. This system would work regardless of the character set or text direction of the language. The system works with both computers or pen & paper. This system does require a user friendly Specification Language $L$ to define the semantics available to the Specification writer, which could be created and iterated on as an open standard.
[Image Omitted]

The Golden Age of Forms
=======================
So far I've described a new infrastructure that could underlie all government forms worldwide. But the revolutionary part would happen next.

On top of this infrastructure, people could build new tools to make it fantastically easy for citizens to interact with government forms. For example, a citizen could have a program on their personal computer that keeps a copy of every possible Specification for every government form in the world. The program could save their information securely and locally. The citizen could then use this program to complete and submit any government form in seconds. They would never have to enter the same information twice, because the program would have all the Specifications and would know how to map the fields accurately. Imagine if autocomplete were perfect and worked on every form. Documentation could be great because everyone building forms would be relying and contributing to the universal Specification Language. The common infrastructure would enable strong network effects where when form builders improve one form they'd improve many. Private enterprises could also leverage the Specification Language and read and write forms in the same vernacular to bring the benefits of this system beyond citizenship to all organizational interactions.

Conclusion
==========
This system is simple, future proof, works everywhere, and offers citizens worldwide a new universal user interface to their governments. It allows existing forms to co-exist as Templates but provides a new minimal and universal alternative.

The challenges would be building a great Specification Language for diverse groups in the face of a small minority disproportionately benefiting from the status quo. A mathematical objective function such as optimizing for minimal syntax could be a long-term guide to consensus.

If this infrastructure were built it should enable the construction of higher level tools to make governments work better for their citizens. It could be the dawn of a Golden Age of forms.

I hope by publishing these ideas others might be encouraged to start developing these systems. I am hoping readers might alert me to locations where this kind of system is already in place. I am also keenly interested in mathematical arguments why this system should not exist universally.

****
